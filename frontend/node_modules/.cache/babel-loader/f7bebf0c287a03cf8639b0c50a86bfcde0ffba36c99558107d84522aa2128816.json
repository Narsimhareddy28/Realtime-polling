{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mdroh\\\\Downloads\\\\React Projects\\\\Real time Polling Application\\\\my-app\\\\frontend\\\\src\\\\Components\\\\PollHistory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PollHistory = () => {\n  _s();\n  const [polls, setPolls] = useState([]);\n  const [selectedPollId, setSelectedPollId] = useState(null); // To store the ID of the selected poll\n  const userId = localStorage.getItem('userId');\n  const navigate = useNavigate();\n  const fetchPollHistory = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/polls/history/deactive/${userId}`);\n      if (response.ok) {\n        const data = await response.json();\n        setPolls(data.userPolls);\n      } else {\n        console.error('Failed to fetch poll history');\n      }\n    } catch (error) {\n      console.error('Error fetching poll history:', error);\n    }\n  };\n  const fetchPollPercentages = async pollId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/pollResponses/${pollId}`);\n      if (response.ok) {\n        const data = await response.json();\n        // Update the state with the selected poll ID and its percentages\n        setSelectedPollId(pollId);\n        setPolls(prevPolls => prevPolls.map(poll => poll._id === pollId ? {\n          ...poll,\n          percentages: data.percentages\n        } : poll));\n      } else {\n        console.error('Failed to fetch poll percentages');\n      }\n    } catch (error) {\n      console.error('Error fetching poll percentages:', error);\n    }\n  };\n  useEffect(() => {\n    fetchPollHistory();\n  }, []);\n  const handlePollClick = pollId => {\n    // Redirect to a new page with the poll statistics\n    navigate(`/poll/${pollId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Poll History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), polls.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No previous polls available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row row-cols-1\",\n      children: polls.map(poll => {\n        var _poll$options;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card w-100\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body d-flex justify-content-between\",\n              style: {\n                cursor: 'pointer'\n              },\n              onClick: () => handlePollClick(poll._id),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: poll.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"list-group\",\n                  children: (_poll$options = poll.options) === null || _poll$options === void 0 ? void 0 : _poll$options.map((option, index) => {\n                    var _poll$percentages;\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"list-group-item d-flex justify-content-between align-items-center\",\n                      children: [option, selectedPollId === poll._id && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"badge badge-light ml-2\",\n                        children: [(_poll$percentages = poll.percentages) === null || _poll$percentages === void 0 ? void 0 : _poll$percentages[option], \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 72,\n                        columnNumber: 29\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 25\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex flex-column align-items-end\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"badge badge-pill badge-danger\",\n                  children: \"\\u25CF\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger mt-1\",\n                  children: \"Completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, poll._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(PollHistory, \"Ve4HZpmVB/lK1n7/amicJ6KyepM=\", false, function () {\n  return [useNavigate];\n});\n_c = PollHistory;\nexport default PollHistory;\nvar _c;\n$RefreshReg$(_c, \"PollHistory\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","PollHistory","_s","polls","setPolls","selectedPollId","setSelectedPollId","userId","localStorage","getItem","navigate","fetchPollHistory","response","fetch","ok","data","json","userPolls","console","error","fetchPollPercentages","pollId","prevPolls","map","poll","_id","percentages","handlePollClick","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","_poll$options","style","cursor","onClick","question","options","option","index","_poll$percentages","_c","$RefreshReg$"],"sources":["C:/Users/mdroh/Downloads/React Projects/Real time Polling Application/my-app/frontend/src/Components/PollHistory.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst PollHistory = () => {\r\n  const [polls, setPolls] = useState([]);\r\n  const [selectedPollId, setSelectedPollId] = useState(null); // To store the ID of the selected poll\r\n  const userId = localStorage.getItem('userId');\r\n  const navigate = useNavigate();\r\n  \r\n  const fetchPollHistory = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/polls/history/deactive/${userId}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setPolls(data.userPolls); \r\n      } else {\r\n        console.error('Failed to fetch poll history');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching poll history:', error);\r\n    }\r\n  };\r\n\r\n  const fetchPollPercentages = async (pollId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/pollResponses/${pollId}`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        // Update the state with the selected poll ID and its percentages\r\n        setSelectedPollId(pollId);\r\n        setPolls(prevPolls => prevPolls.map(poll => poll._id === pollId ? {...poll, percentages: data.percentages} : poll));\r\n      } else {\r\n        console.error('Failed to fetch poll percentages');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching poll percentages:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPollHistory();\r\n  }, []);\r\n\r\n  const handlePollClick = (pollId) => {\r\n    // Redirect to a new page with the poll statistics\r\n    navigate(`/poll/${pollId}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"mb-4\">Poll History</h2>\r\n      {polls.length === 0 ? (\r\n        <p>No previous polls available.</p>\r\n      ) : (\r\n        <div className=\"row row-cols-1\">\r\n          {polls.map((poll) => (\r\n            <div className=\"col mb-4\" key={poll._id}>\r\n              <div className=\"card w-100\">\r\n                <div\r\n                  className=\"card-body d-flex justify-content-between\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  onClick={() => handlePollClick(poll._id)}\r\n                >\r\n                  <div>\r\n                    <h5 className=\"card-title\">{poll.question}</h5>\r\n                    <ul className=\"list-group\">\r\n                      {poll.options?.map((option, index) => (\r\n                        <li key={index} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                          {option}\r\n                          {/* Display the percentage if the poll ID matches the selected poll ID */}\r\n                          {selectedPollId === poll._id && (\r\n                            <span className=\"badge badge-light ml-2\">{poll.percentages?.[option]}%</span>\r\n                          )}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                  {/* Small indicator with red text and red dot */}\r\n                  <div className=\"d-flex flex-column align-items-end\">\r\n                    <span className=\"badge badge-pill badge-danger\">●</span>\r\n                    <span className=\"text-danger mt-1\">Completed</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PollHistory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}