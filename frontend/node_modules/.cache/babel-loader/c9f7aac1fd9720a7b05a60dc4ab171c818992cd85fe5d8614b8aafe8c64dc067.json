{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mdroh\\\\Downloads\\\\React Projects\\\\Real time Polling Application\\\\my-app\\\\frontend\\\\src\\\\Components\\\\CreatePoll.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePoll({\n  onCreatePoll\n}) {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [options, setOptions] = useState(['', '']);\n  const formRef = useRef(null);\n  const userId = localStorage.getItem('userId');\n  const handleOptionChange = (index, value) => {\n    const newOptions = [...options];\n    newOptions[index] = value;\n    setOptions(newOptions);\n  };\n  const handleAddOption = () => {\n    setOptions([...options, '']);\n  };\n  const handleRemoveOption = index => {\n    const newOptions = options.filter((_, i) => i !== index);\n    setOptions(newOptions);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(userId);\n    const pollData = {\n      question,\n      options: options.filter(option => option.trim() !== ''),\n      userId: userId,\n      isActive: true\n    };\n    try {\n      const response = await fetch('http://localhost:5000/api/polls', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(pollData)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        alert(\"Successfully created poll\");\n        onCreatePoll(data.polls.id);\n        formRef.current.reset(); // Reset the form fields\n      } else {\n        console.error('Failed to create poll');\n      }\n    } catch (error) {\n      console.error('Error creating poll:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"card-title text-center\",\n              children: \"Create Poll\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              ref: formRef,\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"question\",\n                  className: \"form-label\",\n                  children: \"Question:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"question\",\n                  className: \"form-control\",\n                  value: question,\n                  onChange: e => setQuestion(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"Options:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    value: option,\n                    onChange: e => handleOptionChange(index, e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 23\n                  }, this), index > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-outline-danger\",\n                    onClick: () => handleRemoveOption(index),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 37\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-outline-primary mb-3\",\n                  onClick: handleAddOption,\n                  children: \"Add Option\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: \"Create Poll\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePoll, \"HY9P/vaQrA4UCnUyIdqB63dXiVs=\");\n_c = CreatePoll;\nvar _c;\n$RefreshReg$(_c, \"CreatePoll\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","CreatePoll","onCreatePoll","_s","question","setQuestion","options","setOptions","formRef","userId","localStorage","getItem","handleOptionChange","index","value","newOptions","handleAddOption","handleRemoveOption","filter","_","i","handleSubmit","e","preventDefault","console","log","pollData","option","trim","isActive","response","fetch","method","headers","body","JSON","stringify","ok","data","json","alert","polls","id","current","reset","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onSubmit","htmlFor","type","onChange","target","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mdroh/Downloads/React Projects/Real time Polling Application/my-app/frontend/src/Components/CreatePoll.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\n\r\nexport default function CreatePoll({ onCreatePoll }) {\r\n  const [question, setQuestion] = useState('');\r\n  const [options, setOptions] = useState(['', '']);\r\n  const formRef = useRef(null);\r\n  const userId = localStorage.getItem('userId');\r\n\r\n  const handleOptionChange = (index, value) => {\r\n    const newOptions = [...options];\r\n    newOptions[index] = value;\r\n    setOptions(newOptions);\r\n  };\r\n\r\n  const handleAddOption = () => {\r\n    setOptions([...options, '']);\r\n  };\r\n\r\n  const handleRemoveOption = (index) => {\r\n    const newOptions = options.filter((_, i) => i !== index);\r\n    setOptions(newOptions);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(userId)\r\n    const pollData = {\r\n      question,\r\n      options: options.filter(option => option.trim() !== ''),\r\n      userId: userId,\r\n      isActive: true\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/polls', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(pollData)\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        alert(\"Successfully created poll\");\r\n        onCreatePoll(data.polls.id);\r\n        formRef.current.reset(); // Reset the form fields\r\n      } else {\r\n        console.error('Failed to create poll');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating poll:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h3 className=\"card-title text-center\">Create Poll</h3>\r\n              <form ref={formRef} onSubmit={handleSubmit}>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"question\" className=\"form-label\">Question:</label>\r\n                  <input type=\"text\" id=\"question\" className=\"form-control\" value={question} onChange={(e) => setQuestion(e.target.value)} />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Options:</label>\r\n                  {options.map((option, index) => (\r\n                    <div key={index} className=\"input-group mb-3\">\r\n                      <input type=\"text\" className=\"form-control\" value={option} onChange={(e) => handleOptionChange(index, e.target.value)} />\r\n                      {index > 1 && <button type=\"button\" className=\"btn btn-outline-danger\" onClick={() => handleRemoveOption(index)}>Remove</button>}\r\n                    </div>\r\n                  ))}\r\n                  <button type=\"button\" className=\"btn btn-outline-primary mb-3\" onClick={handleAddOption}>Add Option</button>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Create Poll</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}